
/*Завдання 1
За допомогою циклу згенеруйте вказану кількість (@number) квадратних чисел.
Використовуйте оператор print для виведення кожного окремого квадратного числа.*/

DECLARE @number INT = 15; -- Число, до якого будемо рахувати квадрати
DECLARE @counter INT = 1; -- Лічильник

-- Цикл, яуий працює доки лічильник менший або рівний вказаному числу.
WHILE @counter <= @number 
BEGIN
DECLARE @square INT;-- Оголошення змінної для зберігання квадрату поточного числа
SET @square = @counter * @counter;-- Розрахунок квадрату числа 9і збереження у змінну @square
PRINT 'Квадрат числа ' + CAST(@counter AS NVARCHAR(10)) + ' = ' + CAST(@square AS NVARCHAR(10));-- Результат у вигляді повідомлення з поточним числом та його квадратом
SET @counter = @counter + 1;-- Збільшення значення @counter на 1 для переходу до наступного числа
END;

/*Завдання 2
За допомогою циклу згенеруйте вказану кількість (@number) парних чисел.
Використовуйте оператор print для виведення кожного окремого парного числа.*/

DECLARE @number INT = 10; -- Верхня межа чисел для перевірки
DECLARE @counter INT = 1;

WHILE @counter <= @number
BEGIN
IF @counter % 2 = 0  -- Перевіряємо, чи поточне число є парним
BEGIN
PRINT 'Парне число: ' + CAST(@counter AS NVARCHAR(10)); -- Результат у вигляді повідомлення з парним числом
END;
SET @counter = @counter + 1;
END;


/*Завдання 3
За допомогою циклу згенеруйте вказану кількість (@number) чисел Фібоначчі.
Використовуйте оператор print для виведення кожного окремого числа Фібоначчі*/

DECLARE @number INT = 10; -- Верхня межа кількості чисел
DECLARE @counter INT = 1;
DECLARE @fib1 INT = 0; -- Перше число Фібоначчі
DECLARE @fib2 INT = 1; -- Друге число Фібоначчі
DECLARE @fib INT; -- Змінна для обчислення наступного числа Фібоначчі

WHILE @counter <= @number
BEGIN
PRINT 'Число Фібоначчі ' + CAST(@counter AS NVARCHAR(10)) + ': ' + CAST(@fib1 AS NVARCHAR(10));-- Виводе поточне число Фібоначчі
SET @fib = @fib1 + @fib2;-- Обчислює наступне число Фібоначчі

-- Оновлює значення чисел Фібоначчі для наступного число:  
SET @fib1 = @fib2;
SET @fib2 = @fib;
SET @counter = @counter + 1;
END;

/*Завдання 4
Створіть тимчасову локальну таблицю #local_temp_dates. За допомогою циклу внесіть вказану кількість дат (@iterations), починаючи з вказаної дати (@start_date).
Тобто, іншими словами, необхідно згенерувати вказану кількість дат за допомогою циклу і внести дати у тимчасову локальну таблицю.
@start_date - сама перша дата. За допомогою оператора print, виведіть номер кожної окремої ітерації циклу (повторення).
- Використовуйте змінні @iterations, @start_date, @I
- Використовуйте оператор IF у комбінації з функцією OBJECT_ID для видалення тимчасової локальної таблиці #local_temp_dates у випадку, якщо вона існує.
- Використовуйте цикл while.*/

DECLARE @id INT = 5; -- Кількість значень для заповнення таблиці
DECLARE @start_date DATE = '2024-05-01'; -- Початкова дата для генерації дат
DECLARE @I INT = 1; -- Лічильник

-- Перевірка наявності тимчасової таблиці і, якщо вона є, видалення її
IF OBJECT_ID('tempdb..#local_temp_dates') IS NOT NULL
DROP TABLE #local_temp_dates;

-- Створення тимчасової таблиці для зберігання дат
CREATE TABLE #local_temp_dates (
ID INT IDENTITY(1,1),
Дата DATE
);

-- Початок циклу для заповнення таблиці датами
WHILE @I <= @id
BEGIN
INSERT INTO #local_temp_dates (Дата)
VALUES (DATEADD(DAY, @I - 1, @start_date)); -- Додавання дати згідно з лічильником

PRINT 'Ітерація ' + CAST(@I AS NVARCHAR(10)); -- Вивід інформації 
SET @I = @I + 1; -- Збільшення лічильника 
END;

-- Вибірка всіх дат з тимчасової таблиці для перевірки результатів
SELECT * FROM #local_temp_dates;

